from cryptography.fernet import Fernet
from flask import Flask, render_template_string, request, escape
key = Fernet.generate_key()
f = Fernet(key)
messages = []
app = Flask(__name__, instance_relative_config=True)
@app.route('/', methods=['GET', 'POST'])
def index():
    decrypted_messages = get_messages()
    if request.method == 'POST':
        data = request.form.get('message')
        if not data:
            return "Message can't be empty."
        
        
        data = escape(data)
        encrypt = f.encrypt(data.encode())
        messages.append(encrypt)

    template = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Send Message</title>
    </head>
    <body>
        <h1>Send Message</h1>
        <form method="post" action="/">
            <input type="text" name="message" placeholder="Enter your message">
            <button type="submit">Send</button>
        </form>


        <h2>Received Messages: (Reload to update)</h2>
        <ul>
            {% for message in messages %}
            <li>{{ message }}</li>
            {% endfor %}
        </ul>
    </body>
    </html>
    """
    return render_template_string(template, messages=decrypted_messages)


def get_messages():
    decrypted_messages = []
    for encrypted_message in messages:
        
        decrypted = f.decrypt(encrypted_message).decode()
        decrypted = escape(decrypted)
        decrypted_messages.append(decrypted)
    return decrypted_messages


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

